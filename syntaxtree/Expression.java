//
// Generated by JTB 1.2.2
//

package syntaxtree;

/**
 * Grammar production:
 * f0 -> InclusiveOrExpression()
 *       | EqualsExpression()
 *       | NotEqualsExpression()
 *       | GreaterThanExpression()
 *       | PlusExpression()
 *       | MinusExpression()
 *       | TimesExpression()
 *       | DivideExpression()
 *       | SinExpression()
 *       | CosExpression()
 *       | PowExpression()
 *       | AbsExpression()
 *       | MapExpression()
 *       | RegionConstant()
 *       | UnaryMinusExpression()
 *       | CoercionToIntExpression()
 *       | CoercionToDoubleExpression()
 *       | TypeAnnotatedExpression()
 *       | FactoryBlock()
 *       | ArrayAccess()
 *       | DotDistribution()
 *       | DotIsFirst()
 *       | DotMethodCall()
 *       | DotIdentifier()
 *       | PrimaryExpression()
 */
public class Expression extends MhpStatement implements Node {
   public NodeChoice f0;

   public Expression(NodeChoice n0) {
       super();
      f0 = n0;
   }

   public void accept(visitor.Visitor v) {
      v.visit(this);
   }
   public Object accept(visitor.ObjectVisitor v, Object argu) {
      return v.visit(this,argu);
   }

}

